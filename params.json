{
  "name": "MapScaler (for Unreal Tournament)",
  "tagline": "Lets you scale your map",
  "body": "## Preview\r\n![Preview](resources/preview.gif)\r\n\r\n## Key features:\r\n - Scale down/up an entire map\r\n - Scale only selected objects\r\n - Align irregular Actors to floor or keep them floating\r\n - Non-uniform scaling\r\n - Undo scaling on the fly\r\n - Store/restore selection\r\n - Work on any scaled level, changes will be updated to previous scales\r\n\r\n## Installation:\r\n - Extract the archive\r\n - Move/copy \"MapScaler.uasset\" into the content folder of _Unreal Tournament_  \r\n   `.\\UnrealTournamentEditor\\UnrealTournament\\Content`  \r\n   ('UnrealTournamentEditor' is the root of the editor installation and may differ)\r\n\r\n## Usage:\r\n - Open your map\r\n - Place the _**MapScaler**_ actor into your map\r\n - Select the actor and set up `Scale Factor` to your desired scale\r\n - Click on `Scale` once in order to start the process\r\n - After the scaling process is done, which should be immediately, you can delete the actor\r\n\r\n**Note 1**: Most of the checkboxes (like `Scale Level`, `Undo`, `Redo` etc.) won't be shown as ticked ever.  \r\n**Note 2**: Keep in mind, that some lighting properties are also scaled. Always check the scaling properties\r\n\r\n## Native support:\r\nIn order to fully scale every scale-able and noticeable properties of some actors, the _MapScaler_\r\nhas to use a native plugin. The engine does not support changing some properties from the Blueprint\r\ncontext, thus the native plugin features some methods to changes these from the _MapScaler_ actor.\r\n\r\nOnly some light properties of static/stationary lights (including _SkyLights_, _DirectionalLights_, etc.)\r\nwill require the need of the native support. Depending on the configuration, the _MapScaler_ will state\r\nwhether a plugin is required or not in the \"Native support\" field/property in the details panel.\r\n\r\nIn order to active the native support, you only have to install the native plugin. Once installed,\r\nthe _MapScaler_ will print out the running version.\r\n\r\nNote:\r\nThe native plugin is not interchangeable throughout engine versions / editor builds. Every time the\r\neditor is updated, the _MapScaler_ plugin has to be updated.\r\n\r\nThe native plugin can be found [here](//github.com/RattleSN4K3/UT4-Tool-MapScaler/releases/latest).\r\n\r\n\r\n## Configuration:\r\nThe _MapScaler_ has several different options to configure the scaling, what type of objects\r\nare scaled, what properties should be scaled or simply check some data stats. You can find\r\nthese options in the details tab while having the _MapScaler_ selected.\r\n\r\nEach time any property is changed, the _MapScaler_ will check the map, process some data and\r\nstores it into the local storage. This is used for various features after having scaled a\r\nmap or undo the scaling. Due to this mechanism, changing various properties may take time\r\ndepending on the size / actor count of the map.\r\n\r\nCheck the **MapScaler_Readme.txt** for more information.\r\n\r\n\r\n## Changelog:\r\nv1.4\r\n- Added: Optional native backend\r\n- Added: Matinee sequences scaling (movement track)\r\n- Added: Light properties scaling (e.g. Directional, Point, Sky)\r\n- Added: Fog properties scaling (Exponential, Atmospheric)\r\n- Added: Undo data updates for new actors\r\n- Added: Option to scale selected objects only\r\n- Added: Option to choose custom pivot (for scaling)\r\n- Added: Option to store and restore selection actors\r\n- Added: Map info in data section\r\n- Added: Ignoring additional actors when scaling (Pickup token, Camera actors)\r\n- Added: Info about resulting scale if multiple scaling processes were done\r\n- ADded: Properly revert scaling for mixed undo data (all/selected)\r\n- Added: Option to use pivot's bounding instead of center\r\n- Removed: Component scaling not used anymore\r\n- Changed: Transform selection restored (for proper grid)\r\n- Changed: Proper data size calculation\r\n- Changed: Proper tooltips for various properties\r\n- Changed: Minor changes to clean up code\r\n- Fixed: Crash for scaling with a factor of 0.0\r\n- Optimized: Aligning of pickup classes (and tokens)\r\n- Optimized: Dropping actors' initialization\r\n- Optimized: Iteration of undo data\r\n- Optimized: Snapshot data check\r\n\r\nNative support:\r\n- Added: Notifications\r\n- Added: Extended light properties scaling\r\n- Added: Version info\r\n\r\nExperimental:\r\n- Added: Mirror mode\r\n\r\nv1.3\r\n- Added: Undo system\r\n- Added: Option to turn off debug messages in output log\r\n- Changed: Renamed \"Update\" to \"Scale\"\r\n\r\nv1.2\r\n- Added: Field for ignoring specific actor/object classes for scaling\r\n- Added: Re-align pickup bases on floor\r\n- Added: Re-align player starts on floor\r\n- Added: Option for re-aligning pickup bases\r\n- Added: Option for non-uniform scale\r\n- Added: Option for scaling Jump pad properties\r\n- Changed: Removed debug code\r\n- Fixed: Minor issues (such as typos, code cleanup, etc.)\r\n\r\nv1.1\r\n- Added: Scale BSP\r\n- Changed: Hide irrelevant categories\r\n\r\nv1.0 - Initial release\r\n- Scale actors (such as StaticMeshActor, SkeletalMeshActor, etc.)\r\n\r\n\r\n## Author\r\nRattleSN4K3\r\n\r\n## Credits:\r\n\r\n - Neil Moore alias CaptainMigraine  \r\n   Initial idea / requests for scaling his map DM-Lea to match some changes to the movement scale\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}